version: "3.2"
services:
  database:
    image: postgres
    restart: always
    volumes:
      - ./database/create_tables.sql:/docker-entrypoint-initdb.d/1-create_tables.sql:ro
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}

  app:
    build: ./app
    container_name: app
    restart: always
    command: uvicorn app.main:app --host 0.0.0.0 --port=8000
    expose:
      - 8000
    environment:
      - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_PORT=${DATABASE_PORT}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - USERNAME=admin
      - PASSWORD=admin
    volumes:
      - .:/app
      - type: bind
        source: /home/model_repository
        target: /app/app/model_repository
    depends_on:
      - database
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - database
    environment:
      - PGADMIN_DEFAULT_EMAIL=f1rexddd@yandex.ru
      - PGADMIN_DEFAULT_PASSWORD=241151Da
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=5555

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - app
      - pgadmin

  triton:
    image: nvcr.io/nvidia/tritonserver:23.05-py3
    restart: always
    depends_on:
      - nginx
    volumes:
      - type: bind
        source: /home/model_repository
        target: /models
    command:
      - tritonserver
      - --model-repository=/models
      - --model-control-mode=explicit


volumes:
  pgdata:
