version: "3.2"
services:
  database:
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - ./database/create_tables.sql:/docker-entrypoint-initdb.d/1-create_tables.sql:ro
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=admin
      - POSTGRES_DB=base
    ports:
      - 5432:5432

  app:
    build: ./app
    container_name: app
    restart: always
    command:
      sh -c "cd ./app && gunicorn --bind 0.0.0.0:5000 index:app"
    expose:
      - 5000
    environment:
      - DATABASE_URL=postgresql://admin:password@database:5432/base
      - USERNAME=admin
      - PASSWORD=admin
    volumes:
      - .:/app
      - type: bind
        source: /home/model_repository
        target: /app/app/model_repository
    depends_on:
      - database
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - database
    environment:
      - PGADMIN_DEFAULT_EMAIL=f1rexddd@yandex.ru
      - PGADMIN_DEFAULT_PASSWORD=password
      - PGADMIN_LISTEN_ADDRESS=0.0.0.0
      - PGADMIN_LISTEN_PORT=5555

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - app
      - pgadmin

  triton:
    image: nvcr.io/nvidia/tritonserver:23.05-py3
    restart: always
    depends_on:
      - nginx
    volumes:
      - type: bind
        source: /home/model_repository
        target: /models
    command:
      - tritonserver
      - --model-repository=/models
      - --model-control-mode=explicit


volumes:
  pgdata:
  
